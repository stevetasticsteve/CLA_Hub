# Generated by Django 4.2.3 on 2023-08-28 22:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LexiconEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eng",
                    models.CharField(
                        max_length=45,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You cannot put symbols here",
                                regex="^[a-z \\d']+$",
                            )
                        ],
                        verbose_name="English",
                    ),
                ),
                (
                    "tpi",
                    models.CharField(
                        max_length=45,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Tok Pisin orthography",
                                regex="^[abdefghiklmnoprstuvwy ]+$",
                            )
                        ],
                        verbose_name="Tok Pisin",
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="extra comments or an extended definition information",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "review",
                    models.CharField(
                        choices=[
                            ("0", "No review"),
                            ("1", "Review now"),
                            ("2", "Review after literacy"),
                        ],
                        default="0",
                        help_text="Should this word be marked for review?",
                        max_length=1,
                    ),
                ),
                ("review_comments", models.TextField(blank=True, null=True)),
                (
                    "review_user",
                    models.CharField(
                        blank=True, editable=False, max_length=10, null=True
                    ),
                ),
                ("review_time", models.DateField(editable=False, null=True)),
                ("created", models.DateField(auto_now_add=True)),
                ("modified", models.DateField(auto_now=True)),
                (
                    "modified_by",
                    models.CharField(
                        blank=True, editable=False, max_length=10, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KovolWord",
            fields=[
                (
                    "lexiconentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lexicon.lexiconentry",
                    ),
                ),
                (
                    "kgu",
                    models.CharField(
                        max_length=45,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="Imengis",
                    ),
                ),
                ("checked", models.BooleanField(default=False)),
                (
                    "matat",
                    models.CharField(
                        blank=True,
                        max_length=45,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauo…ôwtyplkhgdsbnm ]+$",
                            )
                        ],
                        verbose_name="Matat",
                    ),
                ),
                (
                    "pos",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("n", "noun"),
                            ("pn", "proper noun"),
                            ("adj", "adjective"),
                            ("adv", "adverb"),
                            ("com", "compound verb"),
                            ("prn", "pronoun"),
                            ("rel", "relator/preposition"),
                            ("uk", "uknown"),
                        ],
                        max_length=5,
                        null=True,
                        verbose_name="part of speech",
                    ),
                ),
            ],
            bases=("lexicon.lexiconentry",),
        ),
        migrations.CreateModel(
            name="LexiconVerbEntry",
            fields=[
                (
                    "lexiconentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lexicon.lexiconentry",
                    ),
                ),
                (
                    "past_1s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1s past",
                    ),
                ),
                ("past_1s_checked", models.BooleanField(default=False)),
                (
                    "past_2s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2s past",
                    ),
                ),
                ("past_2s_checked", models.BooleanField(default=False)),
                (
                    "past_3s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="3s past",
                    ),
                ),
                ("past_3s_checked", models.BooleanField(default=False)),
                (
                    "past_1p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1p past",
                    ),
                ),
                ("past_1p_checked", models.BooleanField(default=False)),
                (
                    "past_2p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2p past",
                    ),
                ),
                ("past_2p_checked", models.BooleanField(default=False)),
                (
                    "past_3p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="3p past",
                    ),
                ),
                ("past_3p_checked", models.BooleanField(default=False)),
                (
                    "present_1s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1s present",
                    ),
                ),
                ("present_1s_checked", models.BooleanField(default=False)),
                (
                    "present_2s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2s present",
                    ),
                ),
                ("present_2s_checked", models.BooleanField(default=False)),
                (
                    "present_3s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="3s present",
                    ),
                ),
                ("present_3s_checked", models.BooleanField(default=False)),
                (
                    "present_1p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1p present",
                    ),
                ),
                ("present_1p_checked", models.BooleanField(default=False)),
                (
                    "present_2p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2p present",
                    ),
                ),
                ("present_2p_checked", models.BooleanField(default=False)),
                (
                    "present_3p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="3p present",
                    ),
                ),
                ("present_3p_checked", models.BooleanField(default=False)),
                (
                    "future_1s",
                    models.CharField(
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1s future",
                    ),
                ),
                ("future_1s_checked", models.BooleanField(default=False)),
                (
                    "future_2s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2s future",
                    ),
                ),
                ("future_2s_checked", models.BooleanField(default=False)),
                (
                    "future_3s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="3s future",
                    ),
                ),
                ("future_3s_checked", models.BooleanField(default=False)),
                (
                    "future_1p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1p future",
                    ),
                ),
                ("future_1p_checked", models.BooleanField(default=False)),
                (
                    "future_2p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2p future",
                    ),
                ),
                ("future_2p_checked", models.BooleanField(default=False)),
                (
                    "future_3p",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="3p future"
                    ),
                ),
                ("future_3p_checked", models.BooleanField(default=False)),
                (
                    "sg_imp",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="singular imperative",
                    ),
                ),
                ("sg_imp_checked", models.BooleanField(default=False)),
                (
                    "pl_imp",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="plural imperative",
                    ),
                ),
                ("pl_imp_checked", models.BooleanField(default=False)),
                (
                    "enclitic_same_actor",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="same actor encltic",
                    ),
                ),
                ("enclitic_same_actor_checked", models.BooleanField(default=False)),
                (
                    "enclitic_1s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1s encltic",
                    ),
                ),
                ("enclitic_1s_checked", models.BooleanField(default=False)),
                (
                    "enclitic_1p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="1p encltic",
                    ),
                ),
                ("enclitic_1p_checked", models.BooleanField(default=False)),
                (
                    "enclitic_2s",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2s/3s encltic",
                    ),
                ),
                ("enclitic_2s_checked", models.BooleanField(default=False)),
                (
                    "enclitic_2p",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="2p/3p encltic",
                    ),
                ),
                ("enclitic_2p_checked", models.BooleanField(default=False)),
                (
                    "nominalizer",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="nominalizer",
                    ),
                ),
                ("nominalizer_checked", models.BooleanField(default=False)),
                (
                    "pos",
                    models.CharField(
                        default="v",
                        editable=False,
                        max_length=5,
                        verbose_name="part of speach",
                    ),
                ),
            ],
            bases=("lexicon.lexiconentry",),
        ),
        migrations.CreateModel(
            name="PhraseEntry",
            fields=[
                (
                    "lexiconentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lexicon.lexiconentry",
                    ),
                ),
                (
                    "kgu",
                    models.CharField(
                        help_text="Write the phrase here. Phrases involving verbs should use the 1s future conjugation",
                        max_length=100,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm ]+$",
                            )
                        ],
                        verbose_name="phrase text",
                    ),
                ),
                ("pos", models.CharField(default="phr", editable=False, max_length=6)),
                (
                    "matat",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm ]+$",
                            )
                        ],
                        verbose_name="Matat",
                    ),
                ),
                (
                    "linked_word",
                    models.ForeignKey(
                        help_text="Which word in the phrase is most prominant? This phrase will be listed under that word's entry",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="phrase",
                        to="lexicon.lexiconentry",
                    ),
                ),
            ],
            bases=("lexicon.lexiconentry",),
        ),
        migrations.CreateModel(
            name="ImengisVerb",
            fields=[
                (
                    "lexiconverbentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lexicon.lexiconverbentry",
                    ),
                ),
            ],
            bases=("lexicon.lexiconverbentry",),
        ),
        migrations.CreateModel(
            name="PhraseSpellingVariation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "spelling_variation",
                    models.CharField(
                        help_text="write the spelling variation here",
                        max_length=45,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm ]+$",
                            )
                        ],
                        verbose_name="spelling variation",
                    ),
                ),
                (
                    "phrase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spelling_variation",
                        to="lexicon.phraseentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PhraseSense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sense",
                    models.CharField(
                        help_text="write the English for the additional sense here",
                        max_length=45,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You cannot put symbols here",
                                regex="^[a-z \\d']+$",
                            )
                        ],
                        verbose_name="sense",
                    ),
                ),
                (
                    "phrase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="senses",
                        to="lexicon.phraseentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KovolWordSpellingVariation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "spelling_variation",
                    models.CharField(
                        help_text="write the spelling variation here",
                        max_length=45,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="spelling variation",
                    ),
                ),
                (
                    "word",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spelling_variation",
                        to="lexicon.kovolword",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KovolWordSense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sense",
                    models.CharField(
                        help_text="write the English for the additional sense here",
                        max_length=45,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You cannot put symbols here",
                                regex="^[a-z \\d']+$",
                            )
                        ],
                        verbose_name="sense",
                    ),
                ),
                (
                    "word",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="senses",
                        to="lexicon.kovolword",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerbSpellingVariation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "spelling_variation",
                    models.CharField(
                        help_text="write the spelling variation here",
                        max_length=25,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You must only use letters in the Kovol orthography",
                                regex="^[ieauowtyplkhgdsbnm]+$",
                            )
                        ],
                        verbose_name="spelling variation",
                    ),
                ),
                (
                    "conjugation",
                    models.CharField(
                        choices=[
                            ("1sp", "1s past"),
                            ("2sp", "2s past"),
                            ("3sp", "3s past"),
                            ("1pp", "1p past"),
                            ("2pp", "2p past"),
                            ("3pp", "3p past"),
                            ("1spr", "1s present"),
                            ("2spr", "2s present"),
                            ("3spr", "3s present"),
                            ("1ppr", "1p present"),
                            ("2ppr", "2p present"),
                            ("3ppr", "3p present"),
                            ("1sf", "1s future"),
                            ("2sf", "2s future"),
                            ("3sf", "3s future"),
                            ("1pf", "1p future"),
                            ("2pf", "2p future"),
                            ("3pf", "3p future"),
                            ("simp", "singular imperative"),
                            ("pimp", "plural imperative"),
                            ("saen", "same actor enclitic"),
                            ("1sen", "1s enclitic"),
                            ("1pen", "1p enclitic"),
                            ("2sen", "2s/3s enclitic"),
                            ("2pen", "2p/3p enclitic"),
                            ("nom", "nominalizer"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "verb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lexicon.imengisverb",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerbSense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sense",
                    models.CharField(
                        blank=True,
                        help_text="The English for an additional sense to a verb",
                        max_length=45,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=re.RegexFlag["IGNORECASE"],
                                message="You cannot put symbols here",
                                regex="^[a-z \\d']+$",
                            )
                        ],
                        verbose_name="Sense",
                    ),
                ),
                (
                    "verb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lexicon.imengisverb",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MatatVerb",
            fields=[
                (
                    "lexiconverbentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lexicon.lexiconverbentry",
                    ),
                ),
                (
                    "imengis_verb",
                    models.ForeignKey(
                        help_text="The original verb this entry is linked to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matat",
                        to="lexicon.imengisverb",
                        verbose_name="Imengis verb",
                    ),
                ),
            ],
            bases=("lexicon.lexiconverbentry",),
        ),
    ]
